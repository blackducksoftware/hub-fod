/**
 * hub-fod
 *
 * Copyright (C) 2017 Black Duck Software, Inc.
 * http://www.blackducksoftware.com/
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package com.blackducksoftware.integration.hub.fod.utils;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.xhtmlrenderer.pdf.ITextRenderer;


public class VulnerabilityPDFReportCreator {
	
	private static final Logger appLog = LoggerFactory.getLogger(VulnerabilityPDFReportCreator.class);
	
	public static void generateVulnerabilityPDF(String inputFile, String outputPDF)
	{
		
		try  
		{  
		  //tidy.pprint(xmlDoc,new FileOutputStream("/Users/dmeurer/Documents/Dev/workspaces/neon/hub-fod-html/BlackDuckVulnerabilityReport.xhtml"));

		  String url = new File(inputFile).toURI().toURL().toString();
		  OutputStream os = new FileOutputStream(outputPDF);
		
		  ITextRenderer renderer = new ITextRenderer();
		 
		  renderer.setDocument(url);
		  renderer.layout();
		  renderer.createPDF(os);

		  os.close();
		 
		  
		}  
		catch(Exception e)  
		{  
			appLog.error("Error trying to generate PDF with message: " +e.getMessage());
		}
	}

}
